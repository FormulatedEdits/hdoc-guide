'use strict';

// GS: based on markdown-it-tips extension but customized for our specific needs

var container = require('markdown-it-container');

module.exports = function md_tip_plugin(md, options) {
	var containerOpenCount = 0;
	var links = options ? options.links : true;
	init();
	return;

    function icon_from_type(name) {
        switch (name) {
            case "note": return { class: "bi bi-exclamation-circle", title: "Note" };
            case "tip": return { class: "bi bi-lightbulb", title: "Tip" };
            case "important": return { class: "bi bi-megaphone", title: "Important" };
            case "caution": return { class: "bi bi-x-circle", title: "Caution" };
            case "warning": return { class: "bi bi-exclamation-triangle", title: "Warning" };
        }
    }

	function setupContainer(name) { 
        md.use(container, name, {
            render: function (tokens, idx) {
                if (tokens[idx].nesting === 1) {
                    containerOpenCount += 1;
                    let inf = icon_from_type(name);
                    return '<div class="hdoc-alert alert-icon-' + name + '">\n<p class="hdoc-alert-title"><span class="' + inf.class + '"></span>' + inf.title + '</p>\n';
                } else {
                    containerOpenCount -= 1;
                    return '</div>\n';
                }
            }
        });
    }
	
    function isContainerOpen() {
        return containerOpenCount > 0;
    }
	
    function selfRender(tokens, idx, options, env, self) {
        return self.renderToken(tokens, idx, options);
    }
    
	function setupLinks() {
		var defaultRender = md.renderer.rules.link_open || selfRender;
		
		md.renderer.rules.link_open = function (tokens, idx, options, env, self) {
			if (isContainerOpen()) {
				tokens[idx].attrPush(['class', 'md-tip-link']);
			}
			
			return defaultRender(tokens, idx, options, env, self);
		};
	}
	
	function init() {
        setupContainer('note');
        setupContainer('tip');
        setupContainer('important');
        setupContainer('caution');
        setupContainer('warning');
		
		if (links) {
			setupLinks();
		}
	}
};